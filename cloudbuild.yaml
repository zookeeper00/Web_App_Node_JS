steps:
  # Step 1: Build Backend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'backend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker build -t gcr.io/vs-code-proj/webapp/backend:$COMMIT_SHA -f Dockerfile .

  # Step 2: Push Backend Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/vs-code-proj/webapp/backend:$COMMIT_SHA'

  # Step 3: Build Frontend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'frontend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker build -t gcr.io/vs-code-proj/webapp/frontend:$COMMIT_SHA -f Dockerfile .

  # Step 4: Push Frontend Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/vs-code-proj/webapp/frontend:$COMMIT_SHA'

  # Step 5: Deploy Backend Docker image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run deploy backend-service \
        --image gcr.io/vs-code-proj/webapp/backend:$COMMIT_SHA \
        --region asia-south1 \
        --platform managed \
        --allow-unauthenticated \
        --set-env-vars DB_HOST=34.71.152.233,DB_USER=root,DB_PASSWORD=Sathi@1993,DB_NAME=GenAI

  # Step 6: Deploy Frontend Docker image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run deploy frontend-service \
        --image gcr.io/vs-code-proj/webapp/frontend:$COMMIT_SHA \
        --region asia-south1 \
        --platform managed \
        --allow-unauthenticated

images:
  - 'gcr.io/vs-code-proj/webapp/backend:$COMMIT_SHA'
  - 'gcr.io/vs-code-proj/webapp/frontend:$COMMIT_SHA'

logsBucket: gs://cloudbuild-logs

substitutions:
  _REGION: asia-south1
  _DB_HOST: 34.71.152.233
  _DB_USER: root
  _DB_PASSWORD: Sathi@1993
  _DB_NAME: GenAI
