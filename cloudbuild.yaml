steps:
  # Step 1: Build Backend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'backend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker build -t ${_IMAGE_PATH}/backend:${_TAG} .

  # Step 2: Push Backend Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_IMAGE_PATH}/backend:${_TAG}'

  # Step 3: Build Frontend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'frontend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker build -t ${_IMAGE_PATH}/frontend:${_TAG} .

  # Step 4: Push Frontend Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_IMAGE_PATH}/frontend:${_TAG}'

  # Step 5: Deploy Backend Docker image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run deploy backend-service \
        --image ${_IMAGE_PATH}/backend:${_TAG} \
        --region ${_REGION} \
        --platform managed \
        --allow-unauthenticated \
        --set-env-vars DB_HOST=${_DB_HOST},DB_USER=${_DB_USER},DB_PASSWORD=${_DB_PASSWORD},DB_NAME=${_DB_NAME}

  # Step 6: Deploy Frontend Docker image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run deploy frontend-service \
        --image ${_IMAGE_PATH}/frontend:${_TAG} \
        --region ${_REGION} \
        --platform managed \
        --allow-unauthenticated

images:
  - '${_IMAGE_PATH}/backend:${_TAG}'
  - '${_IMAGE_PATH}/frontend:${_TAG}'

options:
  machineType: 'E2_MEDIUM'

logsBucket: gs://cloudbuild-logs

substitutions:
  _IMAGE_PATH: asia-south1-docker.pkg.dev/vs-code-proj/Web_App_Node_JS
  _TAG: $COMMIT_SHA
  _REGION: asia-south1
  _DB_HOST: 34.71.152.233
  _DB_USER: root
  _DB_PASSWORD: Sathi@1993
  _DB_NAME: GenAI
